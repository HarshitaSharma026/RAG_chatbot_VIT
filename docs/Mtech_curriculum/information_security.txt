School of Computer Science and Engineering  
CURRICULUM AND SYLLABI 
(2024-2025) 
M.Tech. Computer Science and Engineering (Information Security)  
M. Tech Computer Science and Engineering 
Specialization in Information Security 
 
 
 
CREDIT STRUCTURE  
 
Category-wise Credit distribution 
Discipline  Core 24 
Specialization Elective 12 
Projects and Internship 26 
Open Elective 3 
Skill Enhancement 5 
Total Credits 70 
 
Discipline Core  Specialization Elective  Projects and Internship  Open Elective  Skill Enhancement  Total Credits  
24 12 26 3 5 70 
 
Discipline Core 
S. No. Course Code  Course Title  Course Type  Version L T P J C 
1 MCSE501L Data Structures and Algorithms Theory Only 1.0 3  0 0 0 3.0  
2 MCSE501P Data Structures and Algorithms Lab Lab Only 1.0 0  0 2 0 1.0  
3 MCSE502L Design and Analysis of Algorithms Theory Only 1.0 3  0 0 0 3.0  
4 MCSE502P Design and Analysis of Algorithms Lab Lab Only 1.0 0  0 2 0 1.0  
5 MCSE503L Computer Architecture and Organisation Theory Only 1.0 3  0 0 0 3.0  
6 MCSE503P Computer Architecture and Organisation Lab Lab Only 1.0 0  0 2 0 1.0  
7 MCSE504L Operating Systems Theory Only 1.0 3  0 0 0 3.0  
8 MCSE504P Operating Systems Lab Lab Only 1.0 0  0 2 0 1.0  
9 MCSE505L Computer Networks Theory Only 1.0 3  0 0 0 3.0  
10 MCSE505P Computer Networks Lab Lab Only 1.0 0  0 2 0 1.0  
11 MCSE506L Database Systems Theory Only 1.0 3  0 0 0 3.0  
12 MCSE506P Database Systems Lab Lab Only 1.0 0  0 2 0 1.0  
Specialization Elective 
S. No. Course Code  Course Title  Course Type  Version L T P J C 
1 MCSE608L Information Security and Risk Management Theory Only 1.0 3  0 0 0 3.0  
2 MCSE609L Cryptosystems Theory Only 1.0 2  0 0 0 2.0  
3 MCSE609P Cryptosystems Lab Lab Only  1.0 0  0 2 0 1.0  
4 MCSE610L Penetration Testing and Vulnerability Assessment Theory Only 1.0 2  0 0 0 2.0  
5 MCSE610P Penetration Testing and Vulnerability Assessment Lab Lab Only 1.0 0  0 2 0 1.0  
6 MCSE611L Malware Analysis Theory Only 1.0 2  0 0 0 2.0  
7 MCSE611P Malware Analysis Lab Lab Only 1.0 0  0 2 0 1.0  
8 MCSE612L Cyber Security Theory Only 1.0 3  0 0 0 3.0  
9 MCSE613L Digital Forensics Theory Only 1.0 3  0 0 0 3.0  
Projects and Internship 
S. No. Course Code  Course Title  Course Type  Version L T P J C 
1 MCSE698J Internship I/ Dissertation I PROJECT 1.0 0  0 0 0 10.0 
2 MCSE699J Internship II/ Dissertation II PROJECT 1.0 0  0 0 0 12.0 
3 MSET695J Project Work PROJECT  1.0 0  0 0 0 4.0 
Open Elective 
S. No. Course Code  Course Title  Course Type  Version L T P J C 
1 MFRE501L Francais Fonctionnel Theory Only 1.0 3 0 0 0 3.0 
2 MGER501L Deutsch fuer Anfaenger Theory Only 1.0 3 0 0 0 3.0 
3 MSTS601L Advanced Competitive Coding Soft Skill 1.0 3 0 0 0 3.0 
Skill Enhancement 
S. No. Course Code  Course Title  Course Type  Version L T P J C 
1 MENG501P Technical Report Writing Lab Only 1.0 0 0 4 0 2.0 
2 MSTS501P Qualitative Skills Practice Soft Skill 1.0 0 0 3 0 1.5 
3 MSTS502P Quantitative Skills Practice Soft Skill 1.0 0 0 3 0 1.5 


 
Discipline Core 

Syllabus Data Structures  and Algorithms
Course code Course title L T P C 
MCSE501L  Data Structures  and Algorithms  3 0 0 3 
Module:1  Growth of Functions  3 hours 
Overview and importance of algorithms and data structures- Algorithm specification, Recursion, 
Performance analysis, Asymptotic Notation - The Big-O, Omega and Theta notation, Programming 
Style, Refinement of Coding - Time-Space Trade Off, Testing, Data Abstraction. 
Module:2  Elementary  Data Structures  6 hours 
Array, Stack, Queue, Linked-list and its types, Various Representations, Operations & Applications of 
Linear Data Structures 
Module:3  Sorting and Searching  7 hours 
Insertion sort, merge sort, sorting in linear Time-Lower bounds for sorting, Radix sort, Bitonic sort, 
Cocktail sort, Medians and Order Statistics-Minimum and maximum, Selection in expected linear time, 
Selection in worst-case linear time, linear search, Interpolation search, Exponential search. 
Module:4  Trees 6 hours 
Binary trees- Properties of Binary trees, B-tree, B-Tree definition- Operations on B-Tree: Searching a B- 
tree, Creating, Splitting, Inserting and Deleting, B+-tree. 
Module:5  Advanced  Trees 8 hours 
Threaded  binary trees, Leftist trees, Tournament  trees, 2-3 tree, Splay tree, Red-black trees, Range trees. 
Module:6  Graphs 7 hours 
Representation of graphs, Topological sorting, Shortest path algorithms- Dijkstra's algorithm , Floyd- 
Warshall algorithm , Minimum spanning trees - Reverse delete algorithm, Boruvka's algorithm. 
Module:7  Heap and  Hashing 6 hours 
 Heaps as priority queues, Binary heaps, binomial and Fibonacci heaps, Heaps in Huffman coding, 
Extendible hashing.  
Module:8  Contemporary  Issues 2 hours 
 
 Total Lecture hours: 45 hours 
 
Text Book(s) 
1. Cormen, Thomas H.,  Charles E. Leiserson, Ronald  L. Rivest,  and Clifford Stein. Introduction  to 
algorithms. MIT press, 2022 . 
Reference  Books 
1. Skiena, Steven S. "The Algorithm  Design Manual (Texts in Computer  Science)."  3rd edition, 2020, 
Springer. 
2. Brass, Peter. Advanced  data structures.  Vol. 193. Cambridge:  Cambridge University  Press, 2008. 
Mode of Evaluation:  CAT / Written  Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus Data Structures  and Algorithms  LAB
Course code Course title L T P C 
MCSE501P  Data Structures  and Algorithms  LAB 0 0 2 1 
Pre-requisite NIL Syllabus version 
  v. 1.0 
Course Objectives  
1. To familiarize the concepts of data structures and algorithm focusing on space and time 
complexity. 
2. To provide a deeper insight on the basic and advanced data structures. 
3. To develop the knowledge for application of the advanced trees and graphs in real world 
scenarios.  
Course Outcome  
After completion of this course, the student shall be able to: 
1. Understand and analyze the space and time complexity of the algorithms. 
2. Identification of suitable data structure for a given problem. 
3. Implementation of graph algorithms in various real-life applications. 
4. Implementation of heaps and trees for querying and searching. 
5. Use of basic data structures in advanced data structure operations. 
6. Use of searching and sorting in various real-life applications. 
 
Indicative  Experiments  
1. Analyzing  the complexity  of iterative and recursive algorithms  
2. Implement  Linear data structures  (Stacks, Queues, Linked Lists) 
3. Linear time sorting techniques  
4. Interpolation  search & Exponential  search 
5. Binary tree & Tree traversals  
6. B-trees & B+ trees 
7. Advanced  Trees: 2-3 tree, splay tree, red black tree etc. 
8. Advanced  Trees: Threaded  Binary trees, tournament  trees 
9. Graph traversals  (BFS, DFS, Topological  sorting) 
10. Determining  the Shortest path between  pair of nodes in the given graph 
11. Minimum  Spanning  trees- reverse delete &  algorithm  
12. Heaps & Hashing 
Total Laboratory  Hours 30 hours 
Text Book(s) 
1. Cormen, Thomas H., Charles E. Leiserson,  Ronald L. Rivest, and Clifford Stein. Introduction  to 
algorithms. MIT press, 2022 . 
Reference  Books 
1. Skiena, Steven S. "The Algorithm  Design Manual (Texts in Computer  Science)."  3rd edition, 2020, 
Springer. 
2. Brass, Peter. Advanced  data structures.  Vol. 193. Cambridge:  Cambridge University  Press, 2008. 
Mode of Evaluation:  CAT / Mid-Term Lab/  FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus Design and Analysis of Algorithms
Course code Course title L T P C 
MCSE502L  Design and Analysis of Algorithms  3 0 0 3 
Module:1  Greedy, Divide and Conquer  Techniques  Introduction  6 hours 
Overview  and Importance  of Algorithms - Stages of algorithm  development:  Describing  the 
problem, Identifying a suitable technique, Design of an algorithm, Illustration of Design Stages - Greedy 
techniques: Graph Coloring Problem, Job Sequencing Problem with Deadlines- Divide and Conquer: 
Karatsuba's fast multiplication method, the Strassen algorithm for matrix multiplication 
Module:2 Dynamic Programming, Backtracking and Branch & Bound 
Techniques 9 hours 
Dynamic programming: Matrix Chain Multiplication, Longest Common Subsequence. Backtracking: N- 
Queens problem, Subset Sum, Graph Coloring- Branch & Bound: A-Star, LIFO-BB and FIFO BB 
methods. 
Module:3  Amortized  analysis and String Matching  Algorithms  6 hours 
Stack operation and Incrementing Binary counter -The aggregate method, the accounting method, the 
potential method, and Dynamic tables. Na√Øve String matching Algorithms, KMP algorithm, Rabin- 
Karp Algorithm, String matching with Finite Automata. 
Module:4  Network  Flow Algorithms  6 hours 
Flow Networks, Maximum Flows: Ford-Fulkerson, Edmond-Karp, Push relabel Algorithm, The 
relabel-to-front algorithm, Minimum Cost flows  Cycle Cancelling Algorithm. 
Module:5  Computational  Geometry  5 hours 
Line Segments  properties, intersection; Convex Hull finding algorithms-  Scan,  
March Algorithm. 
Module:6  Linear Optimization  and Randomized  algorithms  5 hours 
Linear Programming problem - Simplex Method-Big M Method, LP Duality- The hiring problem, 
Finding the global Minimum Cut. 
Module:7 NP Completeness and A pproximation Algorithms  6 hours 
The Class P - The Class NP - Reducibility and NP-completeness - Circuit Satisfiability problem-SAT 
3CNF, Independent Set, Clique, Approximation Algorithm: Vertex Cover, Set Cover and Travelling 
salesman. 
Module:8  Contemporary  Issues 2 hours 
 
 Total Lecture hours:  45 hours 
 
Text Book(s) 
1. Cormen, Thomas H., Charles E. Leiserson,  Ronald L. Rivest, and Clifford Stein. Introduction  to 
algorithms. MIT press, 2022 . 
Reference  Books 
1. Rajeev Motwani,  Prabhakar  Raghavan;   Algorithms,  Cambridge  University  
Press, 1995 (Online Print  2013). 
2. Ravindra K. Ahuja, Thomas L.  Magnanti, and  James B. Orlin, Network Flows: Theory, 
Algorithms, and Applications, 1st Edition, Pearson Education, 2014. 
3. Jon Kleinberg  and EvaTardos,  Algorithm  Design, Pearson Education,   2014. 
Mode of Evaluation:  CAT / Written  Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus Design and Analysis of Algorithms Lab
Course code Course title L T P C 
MCSE502P Design and Analysis of Algorithms Lab 0 0 2 1 
Pre-requisite NIL Syllabus version 
  v. 1.0 
Course Objectives  
1. To provide a mathematical framework for the design and analysis of algorithms. 
2. To disseminate knowledge on how to create strategies for dealing with real-world problems. 
3. To develop efficient algorithms for use in a variety of engineering design settings. 
 
Course Outcome  
On completion of this course, student should be able to: 
1. Apply knowledge of computing and mathematics to algorithm design. 
2. Apply various algorithm paradigms to solve scientific and real-life problems. 
3. Demonstrate the string matching and network flow algorithms relating to real-life 
problems. 
4. Understand and apply geometric algorithms. 
5. Apply linear optimization techniques to various real-world linear optimization 
problems. 
6. Explain the hardness of real-world problems with respect to algorithmic design. 
 
Indicative  Experiments  
1. Greedy Strategy : Graph Coloring Problem, Job Sequencing  Problem with  Deadlines  
2. Divide and Conquer : Karatsuba's fast multiplication method, the Strassen algorithm for matrix 
multiplication 
3. Dynamic Programming: Matrix Chain Multiplication, Longest Common Subsequence, 0-1 
Knapsack 
4. Backtracking:  N-queens, Subset sum 
5. Branch and Bound: Job  selection 
6. String Matching  Algorithms: Rabin  Karp Algorithm, KMP Algorithm  
7. Network Flows : Ford -Fulkerson  and Edmond  Karp, Cycle cancelling  algorithm  
8. Minimum Cost flows  Cycle Cancelling Algorithm 
9. Linear programming:  Simplex method 
10. Randomized  Algorithms:  Las Vegas and  Monte carlo 
11. Polynomial  time algorithm  for verification  of NPC problems 
12. Approximation  Algorithm:  Vertex cover  ,Set cover and TSP 
Total Laboratory  Hours 30 hours 
Text Book(s) 
1. Cormen, Thomas H., Charles E. Leiserson,  Ronald L. Rivest, and Clifford Stein. Introduction  
to algorithms. MIT press, 2022 . 
Reference  Books 
1. Rajeev Motwani,  Prabhakar  Raghavan;  Randomized  Algorithms,  Cambridge  University  
Press, 1995 (Online Print  2013). 
2 Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin, Network Flows: Theory, 
Algorithms, and Applications, 1st Edition, Pearson Education, 2014. 
3 Jon Kleinberg  and EvaTardos,  Algorithm  Design, Pearson Education,   2014. 
Mode of Evaluation:  CAT / Mid-Term Lab/  FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus Computer  Architecture  and Organization 
Course code Course title L T P C 
MCSE503L  Computer  Architecture  and Organization  3 0 0 3 
Module:1  Computer  Evolution  And Performance  5 hours 
Defining Computer Architecture and Organization, Overview of Computer Components, Von Neumann 
Multi-threading, Comparisons of Single Core, Multi Processors, and Multi-Core architectures, Metrics 
for Performance Measurement 
Module:2  Memory Hierarchy  8 hours 
Key Characteristics  of  Memory  systems,  Memory  Hierarchy,  Cache  Design  policies,  Cache 
Performance, Cache Coherence, Snoopy Protocols, Cache coherence protocols, MSI, MESI, MOESI 
Module:3  Parallel Computers  8 hours 
Instruction Level Parallelism(ILP), Compiler Techniques for ILP & Branch Prediction, Thread Level 
Parallelism (TLP), Threading Concepts, Shared Memory, Message Passing, Vectorization 
Module:4  Multithreaded  Programming  using OpenMP  7 hours 
Introduction to OpenMP, Parallel constructs, Runtime Library routines, Work-sharing constructs, 
Scheduling clauses, Data environment clauses, atomic, master Nowait Clause, Barrier Construct 
Module:5  Programming  for GPU 6 hours 
Introduction to GPU Computing, CUDA Concepts, CUDA Programming Model, Program Structure of 
CUDA & Execution, Methods for operations on Device Memory, Thread Organization, Examples 
Module:6  Performance  Analyzers  6 hours 
Performance Evaluation, performance bottlenecks, Profiling categories; Profiling tools: Trace analyzer 
and collector (ITAC), VTune Amplifier XE, Energy Efficient Performance, Integrated Performance 
Primitives (IPP) 
 
Module:7  Energy Efficient  Architectures  5 hours 
Overview of power issues, CMOS Device-level  Power dissipation basics, Sources of energy 
Consumption, Strategies to save power or Energy, Low power designs, Power management techniques 
Module:8  Contemporary  Issues 1 hours 
 
 
 Total Lecture hours:  45 hours 
Text Book(s) 
1. William Stallings,  Computer  Organization  and Architecture:  Designing  for Performance,  
Pearson, 2022, 11th Edition, Pearson 
2 Gerassimos  Barlas, Multicore  and GPU Programming:  An Integrated  Approach,  2022, 2nd 
edition, Morgan Kaufmann 
Reference  Books 
1. J.L. Hennessy  and D.A. Patterson.  Computer  Architecture:  A Quantitative Approach.  5th Edition, 
2012, Morgan Kauffmann Publishers. 
2. Shameem  Akhter, Jason Roberts, Multi-core Programming: Increasing  Performance  Through 
Software Multi-threading, 2010, Intel Press, BPB Publications 
Mode of Evaluation:  CAT / Written  Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus  Computer  Architecture  and Organization  LAB
Course code Course title L T P C 
MCSE503P  Computer  Architecture  and Organization  LAB 0 0 2 1 
Pre-requisite NIL Syllabus version 
  v. 1.0 
Course Objectives  
1. To provide knowledge on basics of computer architectures and organization that lays 
foundation to study high performance architectures 
2. To design and develop parallel programs using parallel computing platforms such as 
OpenMP, CUDA 
3. To evaluate the performance using profiling tools and optimize parallel codes using various 
optimization techniques  
Course Outcome  
After completion of this course, the student shall be able to: 
1. Outline the developments in the evolution of computer architectures and parallel programming 
paradigms 
2. Comprehend the various programming languages and libraries for parallel computing platforms 
3. Use of profiling tools to analyze the performance of applications by interpreting the given data 
4. Evaluate efficiency trade-offs among alternative parallel computing architectures for an 
efficient parallel Application design. 
5. Develop parallel programs using OpenMP and CUDA and analyze performance parameters 
such as speed-up, efficiency for parallel programs against serial programs 
 
Indicative  Experiments  
 
1. Set-up an environment for OpenMP Programming: 
Activities: create a Project using Visual Studio, Writing Sample OpenMp Program, Setting up 
properties, compile & Execute OpenMP program, OpenMP manual study, Creation of Login  
credential on Intel for Intel Parallel Studio 
2. OpenMP program using following construct and describe scenario for the need of construct 
Use of Parallel Construct, Determine the Number of processors in a parallel Region, Find the 
thread ID of each processor 
3. Computation of Execution Time 
Using OpenMP clock, Using windows clock 
4. OpenMP Program using various Environment Routines to access the processor run-time  
information and write interesting observations by comparing various routines 
5. OpenMP program using following Worksharing Constructs and describe scenario for the need of 
construct 
loop construct, sections construct, single construct 
6. OpenMP program using following schedule clauses and describe scenario for the need of clause 
Static, Dynamic, Guided 
7. Develop parallel programs for given serial programs and profile the program using Vtune Analysis 
tool 
Matrix-Matrix multiplication, Matrix-Vector multiplication 
8. Develop parallel programs for given serial programs and profile the program using Vtune Analysis 
tool 
Quicksort, Minimum Spanning Tree 
9. CUDA-platform setup on NVIDIA / Google Colab 
10. Write a CUDA C/C++ program that  add two array  of elements  and store the  result in third array 
11. Write a CUDA C/C++ program that Reverses Single Block  in an Array; CUDA C/C++ 
12. Write a CUDA C  program for Matrix addition and Multiplication using  Shared memory 
Total Laboratory  Hours 30 hours 
 
Text Book(s) 
1. Gerassimos  Barlas, Multicore  and GPU Programming:  An Integrated  Approach,  2022, 2nd 
edition, Morgan Kaufmann 
Reference  Books 
1. Shameem  Akhter, Jason Roberts, Multi-core Programming:  Increasing  Performance  Through 
Software Multi-threading, 2010, Intel Press, BPB Publications 
Mode of Evaluation:  CAT / Mid-Term Lab/ FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus  OPERATING  SYSTEMS
Course code Course title L T P C 
MCSE504L  OPERATING  SYSTEMS  3 0 0 3 
Module:1  Introduction  to Operating  Systems 4 hours 
Computer Organization and Architecture - OS definition  OS history  OS Operations  OS design 
issues - Operating systems structures - Library files - Systems calls  Interrupts - Kernel approaches  
Building and booting an OS. 
Module:2  Process and Scheduling  6 hours 
Process states  State transitions with suspend and resume - Process control block - Context-switching - 
Processes operations - Process scheduling - CPU scheduling: Non-preemptive, preemptive - Multi-queue 
scheduling - Multi-level feedback queue scheduling. 
Module:3  Synchronization  9 hours 
IPC: Shred memory, message passing - Race condition  Critical section problem - Peterson's solution  
Bakery Algorithm - Mutex locks - Semaphores  Classical synchronization problems  Monitors -  
Thread synchronization  Multi-threading Models, Deadlocks  Resource allocation graphs  Deadlock: 
prevention, avoidance, detection and recovery. 
Module:4  Memory  Management  5 hours 
Address binding  Fragmentation - Pinning Memory  Paging  Structure of the page table  Swapping 
- Segmentation - Demand Paging  Copy-on-write - Replacement  Thrashing  Working set  Memory 
compression  Allocating kernel memory. 
Module:5  Managing  Devices,  Files, Security  and Protection  9 hours 
I/O Management  DMA - Delayed write - Disk scheduling algorithms: Seek-time and rotational latency 
based - File control block  Inode  Access method  Directory structure - Directory implementation  
File allocation methods - Free space management  Program and network threats  Cryptography as a 
security tool  Domains of protection  Access matrix  Capability based systems 
Module:6  Real-time Operating  Systems 5 hours 
RTOS Internals - Real-Time Scheduling - Task Specifications - Performance Metrics of RTOS - 
Schedulability Analysis  RTOS Programming Tools. 
Module:7  Virtualization  5 hours 
Need for virtualization - Virtual machines and architectures  Hypervisors - Virtualization Technologies: 
Para Virtualization,  Full Virtualization  - Virtualization  types: Server virtualization,  Application 
virtualization, Storage virtualization. 
Module:8  Contemporary  Issues 2 hours 
 
 Total Lecture hours:  45 hours 
 
Text Book(s) 
1. Abraham Silberschatz, Peter B. Galvin, Greg Gagne,  System  2018, 10th 
Edition, Wiley, United States. 
Reference  Books 
1. Arpaci-Dusseau, R. H., & Arpaci-Dusseau, A. C,  Systems: Three easy pieces, 2018, 
1st Edition, Boston: Arpaci-Dusseau Books LLC.  
2. Kamal, R, Embedded  Systems: Architecture,  Programming  and Design, 2011, 1st Edition, Tata 
McGraw-Hill Education.  
3. Portnoy,   2nd Edition, John Wiley  & Sons, New Jersey,  USA. 
Mode of Evaluation:  CAT / Written  Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 

Syllabus OPERATING  SYSTEMS  LAB
Course code Course title L T P C 
MCSE504P  OPERATING  SYSTEMS  LAB 0 0 2 1 
Pre-requisite Nil Syllabus version 
  v. 1.0 
Course Objectives  
1. To encompass process management, synchronization strategies, memory management, file 
systems, device management, and virtualization. 
2. To introduce the concepts and features of real-time operating systems as well as virtualization. 
Course Outcome  
After completion of this course, the student shall be able to: 
1. Implement scheduling, devising and addressing synchronization issues. 
2. Gain an understanding of memory management tasks. 
3. Develop real-time working prototypes of different small-scale and medium-scale embedded 
systems. 
4. Comprehend the basics of virtualization and differentiate types of virtualization. 
 
Indicative  Experiments  
1. Investigate  the fundamental  Unix/Linux  commands.  
2. Obtaining  the OS system data file and its associated information.  
3. Shell Programming.  
4. Create utility programs that use I/O system calls to simulate operations such as ls, cp, grep, and 
others. 
5. Create child, Orphan and Zombie processes using suitable system calls such as fork(), exec(), 
wait(), kill(), sleep() and exit() system calls. 
6. Create a program that mimics the CPU Scheduling algorithms including multi- level queue 
scheduling algorithm. Ex: Assume that all processes in the system are divided into two categories: 
system processes and user processes. System processes are to be given higher priority than user 
processes. Use FCFS scheduling for the processes in each queue. 
7. Implement  the deadlock-free solution to Dining  Philosophers problem  using Semaphore.  
8. Simulation of Bankers algorithm to check whether the given system is in safe state or not. Also 
check whether addition resource requested can be granted immediately. 
9. Parallel Thread management using Pthreads library. Implement a data parallelism using multi-  
threading. Ex: An application should have a thread created with synchronization and thread 
termination. Every thread in the sub-program must return the value and must be synchronized with 
the main function. Final consolidation should be done by the main (main function). 
10. Dynamic memory allocation  algorithms   First-fit, Best-fit, Worst-fit algorithms.  
11. Page Replacement  Algorithms  FIFO, LRU and Optimal 
12. Implement  a file locking mechanism.  
13. RTOS Based Parameter Monitoring and Controlling System  Monitoring: Collecting data from 
sensors and interface display devices/actuators using a microcontroller. Controlling: Provide an 
alert when the received data reaches a certain threshold value. 
14. Virtualization  Setup: Type-1, Type-2 Hypervisor  (Detailed Study Report). 
Total Laboratory  Hours 30 hours 
 
Text Book(s) 
1. Vijay Mukhi,  C Odyssey: UNIX: v.  2004, 3rd Edition, BPB Publications,  New Delhi, 
India. 
Reference  Books 
1. Stevens, W. R., & Rago, S. A. (2013). Advanced  Programming  in the UNIX Environment:  Advanc 
Progra UNIX Envir_p3. Addison-Wesley.  
2. Love, Robert,  Programming: talking directly to the kernel and C  2013, 2nd 
Edition,  Media, Inc, United States. 
Mode of Evaluation:  CAT / Mid-Term Lab/  FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
 
Syllabus Computer  Networks
Course code Course title L T P C 
MCSE505L  Computer  Networks  3 0 0 3 
Module:1  Computer  Networks  and the Internet 7 hours 
Internet: A Nuts-and-Bolts Description - Network Protocols - The Network Edge: Access Networks and 
Physical Media - The Network Core: Packet Switching, Circuit Switching -  Network of Networks -  
Delay, Loss and Throughput in Packet-Switched Networks - Protocol Layers and Their Service Models 
Module:2  Application Layer 5 hours 
Principles of Network Applications: Architectures, Processes and  Transport Services - The Web and 
HTTP - Electronic Mail in the Internet - DNS The  Directory Service - Peer-to-Peer File 
Distribution - Socket Programming: Creating Network Applications 
Module:3  Transport  Layer 7 hours 
Relationship Between Transport and Network Layers - Overview of the Transport Layer in the Internet 
- Multiplexing and Demultiplexing - Connectionless Transport: UDP - Reliable Data Transfer: Go-Back-  
N (GBN) and Selective Repeat (SR) - Connection- Oriented Transport: TCP, Flow Control and 
Congestion Control 
Module:4  Network Layer: Data Plane 5 hours 
Network Layer  Router - The Internet Protocol (IP): IPv4, Addressing and IPv6 - Generalized 
Forwarding and SDN 
Module:5  Network Layer: Control Plane 5 hours 
Control Plane: Per-router control and logically centralized control - Routing Algorithms - Link-State 
(LS) Routing Algorithm, Distance-Vector (DV) Routing Algorithm, Intra-AS Routing in the Internet: 
OSPF and Routing Among the ISPs: BGP - SDN Control Plane 
Module:6  Link Layer and LANs 8 hours 
Overview of Link Layer Services - Error-Detection and -Correction Techniques: Parity Checks, 
Checksum and CRC - Multiple Access Links and Protocols: Channel Partitioning Protocols and 
Random-Access Protocols - Switched Local Area Networks: Link-Layer Addressing and ARP - Virtual 
Local Area Networks 
Module:7  Wireless and Mobile Networks -Security 6 hours 
Elements of a wireless network - Wireless Links and Network Characteristics - WiFi: 802.11 Wireless 
LANs - Mobility Management: Principles - Wireless and Mobility: Impact on Higher-Layer Protocol-  
Security in Computer Network- Message Integrity and Digital Signatures - Network-Layer Security: 
IPsec and Virtual Private Networks 
Module:8  Contemporary  Issues 2 hours 
 
 Total Lecture hours:  45 hours 
 
Text Book(s) 
1. James F. Kurose, Keith W. Ross,  Networking:  A Top-Down  2022, 8th 
Edition (Paperback), Pearson, United Kingdom. 
Reference  Books 
1. Larry Peterson and Bruce Davie,  Networks:  A Systems  2019, 6th Edition, 
Morgan Kaufmann, United States of America. 
2. Andrew S. Tanenbaum,    2013, 6th Edition, Pearson,  Singapore.  
Mode of Evaluation: CAT / Written Assignment / Quiz  / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
 
Syllabus Computer  Networks  Lab
Course code Course title L T P C 
MCSE505P  Computer  Networks  Lab 0 0 2 1 
Pre-requisite NIL Syllabus version 
  v. 1.0 
Course Objectives  
1. To introduce the computer network concepts and provide skills required to trouble shoot the 
network devices. 
2. To describe the basic knowledge of VLAN. 
3. To develop the knowledge for application of software defined networks. 
Course Outcome  
After completion of this course, the student shall be able to: 
1. Understand the types of network cables and practical implementation of cross-wired and 
straight through cable. 
2. Design and implementation of VLAN. 
3. Analyze and apply network address translation using packet tracer and network simulators. 
4. Design and develop software defined networks. 
 
Indicative  Experiments  
1. Hardware Demo(Demo session of all networking hardware and Functionalities) 
OS Commands(Network configuration commands ) 
2. Error detection and correction mechanisms 
Flow control mechanisms 
3. IP addressing  Classless addressing  
4. Network Packet Analysis using Wireshark 
i. Packet Capture Using Wire shark 
ii. Starting Wire shark 
iii. Viewing Captured Traffic 
iv. Analysis and Statistics & Filters. 
5. Socket programming(TCP  and UDP) Multi client chatting 
6. Networking  Simulation  Tool Wired and Wireless 
7. SDN Applications  and Use Cases 
8. Security in Network - Use cases 
9 Performance evaluation of routing protocols using simulation tools. 
 
Reference  Books 
1. James F. Kuross, Keith W. Ross,  Networking, A Top-Down  8th Edition 
(Paperback), Pearson Education, 2022. 
Mode of Evaluation:  CAT / Mid-Term Lab/  FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
 

Syllabus DATABASE SYSTEMS
Course code Course title L T P C 
MCSE506L  DATABASE SYSTEMS  3 0 0 3 
Module:1  Design and Implementation  of Relational  Model 6 hours 
Database System Concepts and Architecture, Entity-Relationship (ER) Modelling, Relational Model- 
Keys, and Integrity Constraints, Mapping ER model to Relational Schema, Normalization, Boyce Codd 
Normal Form, Multi-valued dependency and Fourth Normal form 
Module:2  Query Processing  and Transaction  Management  6 hours 
Storage and File Structure, Indexing, Query processing, and Query Optimization, Transaction 
Management, Concurrency Control, Recovery 
Module:3  Parallel Databases  and Distributed  Databases  8 hours 
Parallel Database Architecture, Data partitioning strategy, Inter-Query, and Intra-Query Parallelism, 
Distributed Database Features, Distributed Database Architecture, Fragmentation, Replication, 
Distributed Query Processing, Distributed Transactions Processing 
Module:4  Spatial and Multimedia  Databases  6 hours 
Spatial database concepts, Spatial data types, and models, Spatial operators and queries, Indexing in 
spatial databases, Multimedia database concepts, Automatic Analysis of Images, Object Recognition in 
Images, Semantic Tagging of Images 
Module:5  Semi-Structured  Databases  6 hours 
Semi Structured  databases - XML Schema-DTD- XPath- XQuery, Semantic Web, RDF, RDFS 
Module:6  Cloud and NoSQL Databases  6 hours 
Cloud databases- Data Storage Systems on the Cloud, Data Representation, Partitioning and Retrieving 
Data, Challenges with Cloud-Based Databases- NoSQL Data model: Aggregate Models, Document 
Data Model, Key-Value Data Model, Columnar Data Model, Graph-Based Data Model 
Module:7  Database  Security  5 hours 
Database Security Issues, Security Models, Different threats to databases, Challenges to maintaining 
database security 
 
Module:8  Contemporary  Issues 2 hours 
 
 
 Total Lecture hours:  45 hours 
 
Text Book(s) 
1 Abraham Silberschatz,  Henry F. Korth, and S. Sudharsan,   System  7h 
Edition, McGraw Hill, 2019. 
2 R. Elmasri and S. Navathe, Fundamentals of Database Systems, 7th Edition, Addison-Wesley, 
2016 
Reference  Books 
1 Fawcett, Joe, Danny Ayers, and Liam RE Quin.   Wiley India Private Ltd., 5th 
Edition, 2012 
2 Rigaux, Ph, Michel Scholl, and Agnes Voisard.  databases:  with application  to  
Morgan Kaufmann, 2002. 
3 Dunckley  L. Multimedia  databases:  An object relational  approach.  Addison-Wesley Longman  
Publishing Co., Inc.; 2003 Jan 1. 
Mode of Evaluation:  CAT / Written  Assignment /  Quiz / FAT 
Recommended by Board of 
Studies 26-07-2022 
Approved by Academic 
Council No. 67 Date 08-08-2022 
 

Syllabus DATABASE  SYSTEMS  LAB
Course code Course title L T P C 
MCSE506P  DATABASE  SYSTEMS  LAB 0 0 2 1 
Pre-requisite NIL Syllabus version 
  v. 1.0 
Course Objectives  
1. To understand the underlying principles of Relational Database Management System. 
2. To focus on the modeling and design of secure databases and usage of advanced data 
models. 
3. To implement and maintain the structured, semi structured and unstructured data. 
Course Outcome  
After completion of this course, the student shall be able to: 
1. Construct database queries using Structured Query Language (SQL) 
2. Design and implement applications that make use of distributed fault-tolerant databases. 
3. Apply Spatial and Multimedia Database concepts to solve real-world problems. 
4. Implement applications that work with structured, semi-structured, and unstructured 
databases 
5. Create applications that use cloud storage technologies and relevant distributed file systems 
 
Indicative  Experiments  
1. Study of Basic SQL Commands. 
Model any given scenario into ER/EER Model 
2. Table creation with constraints, alter schema, insert values, aggregate functions, simple and 
complex queries with joins, Views, Subqueries. 
3. PL/SQL-Procedures,  Cursors, Functions,  Triggers 
4. Partition a given database based on the type of query and compares the execution speed of the 
query with/without parallelism. 
5. Create a distributed database scenario, insert values, fragment and replicate the database 
Query the distributed database 
6. Consider a schema that contains the following table with the key underlined: 
Employee (Eno, Ename, Desg, Dno). Assume that we horizontally fragment the table as follows: 
Employee1(Eno; Ename; Desg; Dno), where 1<= Dno <=10 
Employee2(Eno; Ename; Desg; Dno), where 11 <= Dno <=20 
Employee3(Eno; Ename; Desg; Dno), where 21 <= Dno <=30 
 
In addition, assume we have 4 sites that contain the following fragments: 
 Site1 has Employee1 
 Site2 has Employee2 
 Site3 has Employee2 and Employee3 
 Site4 has Employee1 
Implement at least 5 suitable queries on Employee fragments. Add relations to the database as 
per your requirements. 
7. Plot points, lines, and polygons using Spatial Databases such as Oracle Spatial, PostgreSQL, 
Microsoft SQL Server etc 
8.  Use Spatial Databases to store data using Latitude and Longitude, find the distance 
between two spatial objects, find the area of a polygon 
 Store and retrieve images from a multimedia database 
9. Create an XML document and validate it against an XML Schema/DTD. 
Use XQuery to query and view the contents of the database 
10. Execute XPATH expressions  on a database. 
 
11. Perform the following using a MongoDB Database 
 Create an Employee Collection and insert a few documents ( sample document given 
below for reference) 
{ "name" : "Satish", "salary" : 30000, "address" : "Vellore", "school"  } 
 Display all employees whose address is vellore and salary is greater than 30000 
 Update the salary for an employee by name  40000 
 Display only name and salary for all employees in the collection 
 Display all employees who are not from school 
 Display only documents that contains the address property 
12. Create an application  that interacts with a cloud database. 
Total Laboratory  Hours 30 hours 
Text Book(s) 
1. D Abraham Silberschatz,  Henry F. Korth, S. Sudarshan   System  7th Edition 
McGraw Hill, 2021 
Reference  Books 
1. Elmasri and Navathe  of  7th Edition  Addison Wesley, 2014 
2. Thomas Connolly, Carolyn Begg  Systems: A Practical Approach to Design, 
Implementation and  6th Edition, Pearson India, 2015 
3. Mishra, Sanjay, and Alan Beaulieu.  Mastering  Oracle SQL: Putting Oracle SQL to Work. O'Reilly 
Media, Inc., 2004. 
Mode of Evaluation:  CAT / Mid-Term Lab/  FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
 
 

Discipline Elective 

Syllabus INFORMATION SECURITY AND RISK 
MANAGEMENT
Course code INFORMATION SECURITY AND RISK 
MANAGEMENT L T P C 
MCSE608L   3 0 0 3 
Module:1  Information  Security Principles  6 hours 
Information Security- Assets and Types - Threat, Vulnerability, Risk and Impact - Information Security 
Policy Concepts - Need for Information Security. 
Module:2  Information  Security Framework  7 hours 
Organization and Responsibilities: Organizational Policy, Standards and Procedures - Information 
Security Governance  - Information  Assurance Programme  Implementation  - Security Incident 
Management - Legal Framework: Security Standards and Procedures. 
Module:3  Security Life Cycle and Controls 8 hours 
Information Security Life Cycle - Testing, Audit, Review and Controls - Systems Development and 
Support - General Controls - People Security - User Access Controls - Technical Security - Protection 
from Malicious Software - Physical Security - Different Uses of Controls. 
Module:4 Security Management Models and Performance  
Measurement 6 hours 
Blueprints - Frameworks and Security Models - Security Architecture Models - Various Access Control 
Models - Information Security Performance Measurement. 
Module:5  Risk Assessment  6 hours 
Threats and its Categories - Vulnerabilities and its Categories - Risk - Calculation of Overall Risk - Risk 
Identification - Risk Analysis - Risk Evaluation - Risk Control - Risk Termination - Risk Reduction - 
Risk Transfer - Risk Tolerance - Overall Risk Assessment. 
Module:6  Risk Management  4 hours 
Risk Management Framework and Process - Managing Risk - Risk Treatment- Alternative Risk 
Management Methodologies. 
Module:7 Disaster  Recovery  and  Business  Continuity 
Management 6 hours 
Disaster Recovery Process and policy - Relationship between Disaster Recovery and Business Continuity 
Management - Resilience and Redundancy - Approaches to Writing and Implementing Plans - Need for 
Documentation - Maintenance and Testing. 
Module:8  Contemporary  Issues 2 hours 
 
 Total Lecture hours:  45 hours 
Text Book(s) 
1. Andy Taylor, David Alexander,  Amanda Finch and David Sutton,  Security 
 Third Edition, BCS, United Kingdom. 
2. Michael E. Whitman and Herbert J. Mattord,  of Information   2018, 
Sixth Edition, Cengage Learning, United States of America. 
Reference  Books 
1. Calder, A., and Watkins, S. G.,  security risk management  for 
 2018, Third Edition, IT Governance Ltd, United States of America. 
2. Susanto, H., and Almunawar, M. N,  security management systems: A novel 
framework and software as a tool for compliance with information security  First 
Edition, Apple Academic Press, New York. 
Mode of Evaluation:  CAT / Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No.67 Date 08-08-2022 


Syllabus CRYPTOSYSTEMS
Course code CRYPTOSYSTEMS  L T P C 
MCSE609L   2 0 0 2 
Module:1  Mathematical  Foundations  of Cryptosystems  4 hours 
Cryptographic attacks  Modular arithmetic   Theorem,  Theorem, Extended 
Euclidean Algorithm, Chinese Remainder Theorem - Solovay Straseen Test - The Jacobi Symbol  
-  
Module:2  Classical  Cryptography  4 hours 
Cryptosystems: Affine Cipher, Vigenere Cipher, Hill Cipher, Linear Feedback Shift Register (LFSR) 
 Cryptanalysis on Affine Cipher, Vigenere Cipher, Hill Cipher and LFSR. 
Module:3  Block Ciphers and Stream Ciphers 4 hours 
 Theory  Linear Cryptanalysis  Differential Cryptanalysis  Description and Analysis 
of DES  Description and Analysis of AES  Modes of Operation. 
Module:4  Hash Functions  and Message Authentication  4 hours 
Hash Functions and Data Integrity  Security of Hash Functions  MD5  SHA512  Nested MAC 
and HMAC  CBC MAC. 
Module:5 Public Key Cryptography and Discrete 
Logarithms 4 hours 
RSA Cryptosystem   Algorithm  Elliptic Curves Over the Reals  Elliptic Curves Modulo 
a Prime  Elliptic Curves Over Finite Fields  ElGamal Cryptosystems on Elliptic Curves - Elliptic 
Curve Diffie  Hellman. 
Module:6 Signature Schemes and Post-Quantum 
Cryptography 5 hours 
Number Theory Research Unit (NTRU): Basics, Lattices and Security of NTRU  Code Based  
Cryptography  McEliece Cryptography  Lamport Signature Scheme  Winternitz Signature 
Scheme  Merkle Signature Scheme. 
Module:7 Key Distribution and Key Agreement 
Schemes 4 hours 
Key Predistribution - Session Key Distribution Schemes: Needham Schroeder Scheme, Kerberos, 
Bellare Rogaway Scheme  Diffie-Hellman Key Agreement - MTI Key Agreement - Paillier 
Cryptosystem  Algebraic Structures  Group and Ring. 
 
Module:8  Contemporary  Issues 1 hours 
 
 
 Total Lecture hours:  30 hours 
 
Text Book(s) 
1. Douglas R. Stinson,  Theory and  2018, 4th Edition, CRC Press, 
United states. 
Reference  Books 
1. Bruce Schneier,   Cryptography:  Protocols,  Algorithms  and Source code in  2017, 
20th edition, John Wiley & Sons, New York. 
2. Behrouz A Forouzan,  Debdeep Mukhopadhyay,   and Network  2011, 
Tata Mcgraw Hill education private limited, India 
Mode of Evaluation: CAT /  Assignment / Quiz  / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No.67 Date 08-08-2022 
 
Syllabus CRYPTOSYSTEMS  LAB 
Course code CRYPTOSYSTEMS  LAB L T P C 
MCSE609P   0 0 2 1 
Pre-requisite NIL Syllabus version 
  v.1.0 
Course Objectives  
1. To learn the concept of Cryptosystems. 
2. To understand the design of cryptanalytics and security algorithms. 
3. To explore various authentication and hashing algorithms. 
 
Course Outcome  
Upon completion of this course, the student will be able to: 
1. Gain a deep insight into attacks and emerging security algorithms. 
2. Explore and analyze of signature and key exchange algorithms. 
Indicative  Experiments  
1. Implement a client and a server on different computers. Perform the communication 
between these two entities by using RSA cryptosystem. 
2. Implement a client and a server on different computers. Perform the authentication of sender 
between these two entities by using digital signature cryptosystem 
3. Implement  man-in-the middle attack in Diffie-Hellman key exchange  algorithm  
4. Implementing  SHA-512 message digest algorithm  
5. Demonstrate  the classical cryptography  algorithms  
6. Implement  Data Encryption  Standard algorithm.  
7. Implement a  session key agreement  algorithm.  
8. Demonstrate  the hash-based message  authentication code  (HMAC) algorithm.  
9. Implement  ElGamal cryptosystems  on elliptic curves 
10. Implement  Advanced  Encryption  Standard algorithm  
 
 Total Lecture hours:  30 hours 
Text Book(s) 
1. Douglas R. Stinson,  and  2018, 4th Edition, CRC Press, 
United states. 
Reference  Books(s) 
1. Bruce Schneier,  Cryptography: Protocols, Algorithms and Source code in  2017, 
20th edition, John Wiley & Sons, New York. 
2. Behrouz A Forouzan, Debdeep Mukhopadhyay,  and Network  2011, 
Tata Mcgraw Hill education private limited, India 
Mode of Evaluation:  Continuous  Assessment  / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
 

Syllabus PENETRATION TESTING AND VULNERABILITY 
ASSESSMENT
Course code PENETRATION TESTING AND VULNERABILITY 
ASSESSMENT L T P C 
MCSE610L   2 0 0 2 
Module:1  Pentesting  and Information  Security 4 hours 
Pentester  Types of Hackers  Pentest Methodology  Pentest Types  Vulnerability Scanning  
Vulnerability Assessments  Pentest Target and Specializations - Asset Management: CIA Triad  
Security Controls  Access Controls  Incident Responses  Malware  Advanced Persistent 
Threats  Cyber Kill Chain  Air-gapped Machines  Dark Web.  
Module:2  Recon and Hijacking  4 hours 
Reconnaissance  External ¬¨- Dumpster Diving  Social Media  Social Engineering - Internal  
Sniffing and Scanning  De-Authentication of Attacks  Detection Mechanism - Session Hijacking: 
Blind and Non-Blind Spoofing - Detection and Prevention Mechanisms. 
Module:3  Network  and Wireless  Mayhem  4 hours 
WEP Theory  SSID - WPA  WPS -.MAC Filtering  Port Security  IPsec - War Diving: Basic 
Web Cracking  Detecting Wireless Attacks - Fake Authentication  Handshake Theory - 
Bypassing Firewalls  Evading Intruder Detection System - Securing Network from Attacks. 
Module:4  Web Server Attacks 4 hours 
Understanding Web Languages - Web Architecture - Webpage Spoofing  Information Gathering 
from Target Websites  Finding Subdomains  Files Based Analysis - Cookies Handling - Web 
Page Attacks  Attack Detection  Protection Against Web Page Attacks  MITMF Code Injection. 
Module:5  Injection  Vulnerability  4 hours 
Databases  Testing Database Vulnerability  Securing SQL Server  Detecting Database Attacks  
Protection Against Database Attacks - File Upload Vulnerability  Inclusion Vulnerability - Code Execution 
 Local File  Remote File  Mitigation Strategies . 
Module:6  Gaining Access 5 hours 
Introduction to Gaining Access  Server Side  Client Side  Post  Exploitation Server Side Attacks  
Metasploit and MSFS - Scripting Vulnerabilities - Automatic Vulnerability Compliances using OWASP 
ZAP. 
Module:7  Escalation 4 hours 
Trojan, Viruses and Backdoor Applications - Detection Mechanism - Unix Permission and Root Access 
 Buffer overflow  Memory Architecture  Examples  Escalation  Linux  Window  Preventing 
Mechanism  DDOS  Detection and Prevention  Tools. 
Module:8  Contemporary  Issues 1 hours 
 
 Total Lecture hours:  30 hours 
 
Text Book(s) 
1. Phillip L. Wylie, Kim Crawley,  Pentester BluePrint:  Starting a Career as an Ethical  
2020, Wiley, United States. 
2. Sabih, Zaid,  Ethical Hacking from Scratch: Your stepping stone to penetration   2018 
Packt Publishing Ltd, United Kingdom. 
Reference  Books 
1. Diogenes, Yuri,  and Erdal Ozkaya,  Attack and Defense Strategies:  Infrastructure  
security with Red Team and Blue Team  2018, Packt Publishing Ltd, United Kingdom. 
2. Andrew Whitaker,  and Daniel P. Newman.   Testing and Network  2005, Cisco 
Press, New Jersey. 
Mode of Evaluation:  CAT / Assignment /  Quiz / FAT 
Recommended  by Board of Studies 26-07-2022 
Approved  by Academic  Council No.67 Date 08-08-2022 

Syllabus PENETRATION  TESTING  AND VULNERABILITY 
ASSESSMENT LAB 
Course code PENETRATION  TESTING  AND VULNERABILITY 
ASSESSMENT LAB L T P C 
MCSE610P   0 0 2 1 
Pre-requisite  Syllabus version 
  v.1.0 
Course Objectives:  
1. To comprehend the security framework related occurrences and knowledge on expected 
protections, and countermeasures against normal vulnerabilities. 
2. To identify security weaknesses in a network, machine, and in software. 
3. To make students familiarization with cyber kill-chains.  
Course Outcome:  
Upon completion of this course, the student will be able to: 
1. Ability to perform pentest on target and generate a report based on the test and determine the 
security threats and vulnerabilities in computer networks. 
2. Using the acquired knowledge into practice for testing the vulnerabilities and identifying threats. 
List of Challenging  Experiments  (Indicative)   
1. Set up of Kali Linux in a Virtual machine and setup with DNS info and collection of 
local networks 3 hours 
2. Scan the network for Windows XP and Windows 7 Target machines in local 
network and virtual network 3 hours 
3. Identify the open ports and firewall rules setup 2 hours 
4. Use password guessing tools to guess a password. Use password strengthening tools 
to strengthen the password. Try guessing the password and tabulate the enhanced 
difficulty due to length of password and addition of special characters. 2 hours 
5. Extract password hashes from Windows XP/NT machine. Use a password extraction 
tool, using word list, single crack or external mode to recover the password. 
Increase the complexity of the password and determine the point at which the 
cracking tool fails. 2 hours 
6. Cracking Linux passwords 2 hours 
7. Experiments on SQL injections 2 hours 
8. Analysis of WEP flaws 2 hours 
9. Experiments on Wireless DDoS Attacks 2 hours 
10. Prevention against Cross Site Scripting Attacks 2 hours 
11. Experiments on Metasploit Framework 2 hours 
12. Cross Site Scripting 2 hours 
13. Cross Site Request Forgery 2 hours 
14. File upload vulnerability on social engineering 2 hours 
Total Laboratory  Hours 30 hours 
  
Text Book(s)  
1. Phillip L. Wylie, Kim  Pentester BluePrint: Starting a Career as an Ethical  2020, 
Wiley, United States. 
2. Sabih, Zaid,  Ethical Hacking from Scratch: Your stepping stone to penetration  2018 Packt 
Publishing Ltd, United Kingdom. 
Reference Book(s)  
1. Diogenes, Yuri, and  Attack and Defense Strategies: Infrastructure security 
 
2. 
New Jersey. 
Mode of Evaluation: Continuous Assessment / FAT 
Recommended by Board of Studies 26-07-2022 
Approved  by Academic  Council No. 67 Date 08-08-2022 
